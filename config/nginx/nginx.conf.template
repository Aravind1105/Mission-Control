worker_processes auto;

events {
    worker_connections 8000;
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        listen 8080;

        access_log /var/log/nginx/access.log compression;

        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }

        ## Compression.
        gzip on;
        gzip_buffers 16 8k;
        gzip_comp_level 1;
        gzip_http_version 1.1;
        gzip_min_length 10;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
        gzip_vary on;
        gzip_proxied any;
        gzip_disable msie6;

        root /var/www;
        index index.html index.htm;

        location /api { 
            proxy_pass ${API_PROXY_URL};
            proxy_set_header X-Real-IP $remote_addr;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires off;
            access_log off;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate';
        }

        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}